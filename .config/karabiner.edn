;; ============================
;;
;; RIVER CONFIG
;; Created on 2023-10-25
;;
;; ============================

;; LOCATION: ~/.config/karabiner.edn
;; COMMAND TO ACTIVATE: goku

;; ============== LINKS ==============

;; all keys list: https://github.com/JoshuaManuel/Karabiner-Elements-Key-List

;; goku: https://github.com/yqrashawn/GokuRakuJoudo
;; goku tutorial: https://github.com/yqrashawn/GokuRakuJoudo/blob/master/tutorial.md
;; karabiner: https://karabiner-elements.pqrs.org/docs

;; !  | means mandatory
;; #  | means optional
;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option
;; R  | right_shift
;; P  | caps_lock
;; !! | mandatory command + control + optional + shift (hyper)
;; ## | optional any

;; article
;; https://medium.com/@nikitavoloboev/karabiner-god-mode-7407a5ddc8f6
;; https://github.com/nikitavoloboev/config/blob/master/karabiner/karabiner.edn
;; https://github.com/gabriel-gardner/modtap-karabiner/tree/main  !!! MODTAP !!!

;; good configs
;; https://gist.github.com/nikolai-cc/02f6b070972840323ae355ef847e91a6
;; https://github.com/kaushikgopal/dotfiles/blob/master/.karabiner.edn
;; https://johnlindquist.com/customize-karabiner-with-goku/
;; https://blog.rtwilson.com/karabiner-elements-and-goku-for-custom-keyboard-shortcuts-in-macos/
;; https://github.com/kiinoda/goku/blob/main/karabiner.edn
;; https://gist.github.com/rdavison/290abc3f5fe5db4a81f8f3e7164ac7a5

;; find bundleid and other stuff in karabiner-eventviewer

;; ============== PARAMS ==============

{
    :profiles {
        :River {
            :default true
            :sim     50 ;; simultaneous key press threshold
            :delay   200 ;; to_delayed_action_delay_milliseconds
            :alone   200 ;; to_if_alone_timeout_milliseconds
            :held    200 ;; to_if_held_down_threshold_milliseconds
        }

        :RiverGaming {
            :default false
            :sim     50
            :delay   200
            :alone   200
            :held    200
        }
    }

    :input-sources {
        :abc { :input_source_id "^com\\.apple\\.keylayout\\.ABC$" }
        :graphite { :input_source_id "^org\\.sil\\.ukelele\\.keyboardlayout\\.graphiteangle\\.graphiteangle$" }
        :russian { :input_source_id "^com\\.apple\\.keylayout\\.RussianWin$" } ;; replaceable with { :language "ru" }
        :japanese { :input_source_id "^com\\.apple\\.inputmethod\\.Kotoeri\\.RomajiTyping\\.Japanese$" } ;; replaceable with { :language "ja" }
    }

    :applications {
        :krita ["^org\\.krita$"]

        :dota ["^com\\.valvesoftware\\.dota2$"]
        :starcraft ["^com\\.blizzard\\.starcraft2$"]
        :terraria ["^org\\.Terraria$"]
    }

    :templates {
        ;; :open "open -a \"%s\""
        ;; :link "open \"%s\""
        :sigkill-frontmost "killall -9 \"$(osascript -e 'tell application \"System Events\" to (name of (first process whose frontmost is true))')\""
    }

    :froms {
        ;; :any_key { :any :key_code }
        ;; :any_consumer { :any :consumer_key_code }
        ;; :any_button { :any :pointing_button }

        ;alias
        ;; :delete { :key :delete_or_backspace }
        ;; :return { :key :return_or_enter }
        ;; :btick { :key :grave_accent_and_tilde }
        ;; :tilde { :key :grave_accent_and_tilde }
        ;; :bslash { :key :backslash }
        ;; :ls { :key :left_shift }
        ;; :rs { :key :right_shift }
    }

    :tos {
        :left-desktop { :key :!Tleft_arrow }
        :right-desktop { :key :!Tright_arrow }
        :mission-control { :key :!Tup_arrow }
        :app-windows { :key :!Tdown_arrow }
        :open-siri { :key :!QEf18 }
        :open-brave { :key :!QEf19 }
    }

    :main [

        ;; ============== RIVERGAMING ==============

        {
            :des "Dota"
            :rules [
                :RiverGaming
                [:condi :dota]

                [:##caps_lock :left_control]
                [:##left_command :left_option]

                [:fn :m]

                [:!Fgrave_accent_and_tilde :!Oi]

                [:!F1 :!Oo]
                [:!F2 :!Op]
                [:!F3 :!Oopen_bracket]
                [:!F4 :!Oclose_bracket]

                [:!Of1 :j]
                [:!Of2 :k]
                [:!Of3 :l]
                [:!Of4 :semicolon]
            ]
        }

        {
            :des "Starcraft 2"
            :rules [
                :RiverGaming
                [:condi :starcraft]

                [:##caps_lock :!Tleft_option]
                [:##left_command :left_control]
            ]
        }

        {
            :des "Terraria"
            :rules [
                :RiverGaming
                [:condi :terraria]

                [:##Cq :vk_none] ;; prevent from quitting
            ]
        }

        ;; ============== APPS ==============
        ;; these rules go first because of F keys

        {
            :des "Krita"
            :rules [
                :krita
                [:f1 :f1] [:f2 :f2] [:f3 :f3] [:f4 :f4] [:f5 :f5] [:f6 :f6]
            ]
        }

        ;; ============== FUNCTION ROW ==============

        {
            :des "Function row"
            :rules [
                [:f1 :play_or_pause]
                [:f2 :rewind]
                [:f3 :fast_forward]
                [:f4 :mission-control]
                [:f5 :app-windows]

                ;; HOW TO NOT DO CAPSLOCK:
                ;; dont do :##Eslash, cant type a question mark
                ;; dont do [:right_option :slash] either, cuz capslock changes slash to question mark
                ;; dont do :!Qf12 bc capslock messes up that too
                ;; dont do :##Fright_shift, nope
                ;; the only thing that works is choosing one key like this
                [:##f6 :f16 nil { :held :caps_lock }] ;; F6 —> F16 [capslock when held]

                [:f7 :f17]
                [:f8 :display_brightness_decrement]
                [:f9 :display_brightness_increment]
                [:f10 :mute]
                [:f11 :volume_decrement]
                [:f12 :volume_increment]
            ]
        }

        ;; ============== GENERAL ==============

        {
            :des "General"
            :rules [
                ;; --- Hyper & Semihyper ---

                [:##caps_lock :!WEright_shift [:!extend-hold] { :alone :delete_or_backspace }] ;; Capslock —> Hyper
                [:##fn :!Wright_shift] ;; FN -> Semihyper
                [:##right_option :fn] ;; Right Option -> FN
                ;; [:!QWERleft_command :f13] ;; Hyper + Command -> Leader key

                ;; idea: another extend layer on Hyper + Tab?

                ;; makes Fine Volume Adjustment work
                [:!SOf11 :!SOvolume_down]
                [:!SOf12 :!SOvolume_up]
            ]
        }

        ;; ============== HYPER LAYER ==============

        {
            :des "Hyper layer"
            :rules [
                ;; --- Navigation ---

                [:!WERa :left-desktop]
                [:!WERs :right-desktop]

                ;; --- Keyboard layout switching ---

                [:!WERj { :input :graphite }]
                ;; [:!WERk { :input :russian }]
                ;; [:!WERl { :input :japanese }]
                [:!WERsemicolon { :input :abc }]

                ;; --- Placeholder bindings ---

                [:!WERq :open-brave] ;; needed for no annoying hyper + q sound
                [:!WERescape :open-siri]
                ;; [:!WERleft_command :!QEf17] ;; Hyper + Left Command —> Placeholder + F17 (Spotify)

                ;; --- Other ---

                [:!WERf12 [:sigkill-frontmost]]
            ]
        }

        ;; ============== HYPER + COMMAND LAYER ==============

        ;; {
        ;;     :des "Hyper + Command layer"
        ;;     :rules [
        ;;         ;; arrow navigation
        ;;         [:!CWERa :left_arrow]
        ;;         [:!CWERd :right_arrow]
        ;;         [:!CWERw :up_arrow]
        ;;         [:!CWERs :down_arrow
        ;;     ]
        ;; }

        ;; ============== OPTION LAYER ==============

        {
            :des "Option layer"
            :rules [
                ;; arrow navigation
                [:!O#Sa :left_arrow]
                [:!O#Sd :right_arrow]
                [:!O#Sw :up_arrow]
                [:!O#Ss :down_arrow]

                [:!O#Sq :!Oleft_arrow] ;; word
                [:!O#Se :!Oright_arrow]
                [:!O#Sz :!Cleft_arrow] ;; line ;; kinda redundant because of home/end
                [:!O#Sc :!Cright_arrow]

                [:!O#S1 :home]
                [:!O#S2 :end]
                [:!O#S3 :page_up]
                [:!O#S4 :page_down]

                [:!Oright_command :0]
                [:!Om :1]
                [:!Ocomma :2]
                [:!Operiod :3]
                [:!Oj :4]
                [:!Ok :5]
                [:!Ol :6]
                [:!Ou :7]
                [:!Oi :8]
                [:!Oo :9]
            ]
        }

        ;; ============== EXTEND LAYER ==============

        {
            :des "Extend layer activation"
            :rules [[:##right_command ["extend-hold" 1] nil { :afterup ["extend-hold" 0] }]]
        }

        {
            :des "Extend layer"
            :rules [
                :extend-hold

                ;; arrow navigation
                [:##a :left_arrow]
                [:##d :right_arrow]
                [:##w :up_arrow]
                [:##s :down_arrow]

                [:##q :!Oleft_arrow] ;; word
                [:##e :!Oright_arrow]
                [:##z :!Cleft_arrow] ;; line
                [:##c :!Cright_arrow]

                [:##1 :home]
                [:##2 :end]
                [:##3 :page_up]
                [:##4 :page_down]
                
                [:##j :escape]
                [:caps_lock :escape]

                [:##k :delete_or_backspace] ;; delete character
                [:##l :!Odelete_or_backspace] ;; delete word
                [:##semicolon :!Cdelete_or_backspace] ;; delete line

                [:##i :!Fdelete_or_backspace] ;; forward delete character
                [:##o :!FOdelete_or_backspace] ;; forward delete word
                [:##p :!FCdelete_or_backspace] ;; forward delete line
                ;; [:##e [:!Send :delete_or_backspace]] ;; forward delete line

                [:##delete_or_backspace :!Odelete_or_backspace] ;; delete word
            ]
        }

        {
            :des "Graphite: Extend layer"
            :rules [
                [:condi :extend-hold :graphite]

                [:##g :!Fu] ;; fullscreen
                [:##a :!Ck]
            ]
        }

        {
            :des "Qwerty: Extend layer"
            :rules [
                [:condi :extend-hold :!graphite]

                [:##g :!Ff] ;; fullscreen
                [:##a :!Ca]
            ]
        }

        ;; ============== GRAPHITE ==============

        {
            :des "Graphite: bindings"
            :rules [
                :graphite

                ;; bring some QWERTY shortcuts back
                ;; [:!C#TOSq :!C#TOSb] ;; cmd-Q
                ;; [:!C#TOSw :!C#TOSr] ;; cmd-W
                [:!C#TOSz :!C#TOSt] ;; cmd-Z
                [:!C#TOSx :!C#TOSz] ;; cmd-X

                ;; --- Window management ---

                [:!WERz :!Cr] ;; Hyper + Z -> Cmd + W
                [:!WERx :!Cb] ;; Hyper + X -> Cmd + Q
                [:!WERc :!Cj] ;; Hyper + C -> Cmd + H
            ]
        }

        {
            :des "Qwerty: bindings"
            :rules [
                :!graphite

                ;; --- Window management ---

                [:!WERz :!Cw] ;; Hyper + Z -> Cmd + W
                [:!WERx :!Cq] ;; Hyper + X -> Cmd + Q
                [:!WERc :!Ch] ;; Hyper + C -> Cmd + H
            ]
        }

        ;; ============== TEMPORARY ==============

        {
            :des "Qwerty: Temporary"
            :rules [
                :!graphite

                ;; temporarily make cmd-q and cmd-w unusable to break muscle memory
                [:!C#TOSq :vk_none]
                [:!C#TOSw :vk_none]
            ]
        }

        ;; ============== Homerow modifiers ==============

        ;; this implementation should be better:
        ;; https://github.com/gabriel-gardner/modtap-karabiner/tree/main  !!! MODTAP !!!

        ;; {
        ;;     :des "Homerow modifiers"
        ;;     :rules [
        ;;         ;; the downside is these keys are now typed on KEY UP not DOWN

        ;;         [:a nil nil { :held :left_control :alone :a :params { :alone 100 :held 200 } }]
        ;;         [:s nil nil { :held :left_option  :alone :s :params { :alone 100 :held 200 } }]
        ;;         [:d nil nil { :held :left_shift   :alone :d :params { :alone 100 :held 200 } }]
        ;;         [:f nil nil { :held :left_command :alone :f :params { :alone 100 :held 200 } }]

        ;;         [:j nil nil { :held :right_command :alone :j :params { :alone 100 :held 200 } }]
        ;;         [:k nil nil { :held :right_shift   :alone :k :params { :alone 100 :held 200 } }]
        ;;         [:l nil nil { :held :right_option  :alone :l :params { :alone 100 :held 200 } }]
        ;;         [:semicolon nil nil { :held :right_control :alone :semicolon :params { :alone 100 :held 200 } }]
        ;;     ]
        ;; }
    ]
}