;; ============================
;;
;; RIVER CONFIG
;; Created on 2023-10-25
;;
;; ============================

;; LOCATION: ~/.config/karabiner.edn
;; COMMAND TO ACTIVATE: goku

;; ============== LINKS ==============

;; all keys list: https://github.com/JoshuaManuel/Karabiner-Elements-Key-List

;; goku: https://github.com/yqrashawn/GokuRakuJoudo
;; goku tutorial: https://github.com/yqrashawn/GokuRakuJoudo/blob/master/tutorial.md
;; karabiner: https://karabiner-elements.pqrs.org/docs

;; !  | means mandatory
;; #  | means optional
;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option
;; R  | right_shift
;; P  | caps_lock
;; !! | mandatory command + control + optional + shift (hyper)
;; ## | optional any

;; article
;; https://medium.com/@nikitavoloboev/karabiner-god-mode-7407a5ddc8f6
;; https://github.com/nikitavoloboev/config/blob/master/karabiner/karabiner.edn
;; https://github.com/gabriel-gardner/modtap-karabiner/tree/main  !!! MODTAP !!!

;; good configs
;; https://gist.github.com/nikolai-cc/02f6b070972840323ae355ef847e91a6
;; https://github.com/kaushikgopal/dotfiles/blob/master/.karabiner.edn
;; https://johnlindquist.com/customize-karabiner-with-goku/
;; https://blog.rtwilson.com/karabiner-elements-and-goku-for-custom-keyboard-shortcuts-in-macos/
;; https://github.com/kiinoda/goku/blob/main/karabiner.edn
;; https://gist.github.com/rdavison/290abc3f5fe5db4a81f8f3e7164ac7a5

;; find bundleid and other stuff in karabiner-eventviewer

;; ============== PARAMS ==============

{
    :profiles {
        :River {
            :default true
            :sim     50 ;; simultaneous key press threshold
            :delay   200 ;; to_delayed_action_delay_milliseconds
            :alone   200 ;; to_if_alone_timeout_milliseconds
            :held    200 ;; to_if_held_down_threshold_milliseconds
        }

        :RiverGaming {
            :default false
            :sim     50
            :delay   200
            :alone   200
            :held    200
        }
    }

    :devices {
        :nuphy [{ :vendor_id 2007 }]
    }

    :input-sources {
        :abc { :input_source_id "^com\\.apple\\.keylayout\\.ABC$" }
        :graphite { :input_source_id "^org\\.sil\\.ukelele\\.keyboardlayout\\.graphitex\\.graphitex$" }
        :canary { :input_source_id "^org\\.sil\\.ukelele\\.keyboardlayout\\.canaryx\\.canaryx$" }
        :russian { :input_source_id "^com\\.apple\\.keylayout\\.RussianWin$" } ;; replaceable with { :language "ru" }
        :japanese { :input_source_id "^com\\.apple\\.inputmethod\\.Kotoeri\\.RomajiTyping\\.Japanese$" } ;; replaceable with { :language "ja" }
    }

    :applications {
        :krita ["^org\\.krita$"]

        :dota ["^com\\.valvesoftware\\.dota2$"]
        :starcraft ["^com\\.blizzard\\.starcraft2$"]
        :terraria ["^org\\.Terraria$"]
    }

    :templates {
        ;; :open "open -a \"%s\""
        ;; :link "open \"%s\""
        :sigkill-frontmost "killall -9 \"$(osascript -e 'tell application \"System Events\" to (name of (first process whose frontmost is true))')\""
        ;; :caps-announce "/Applications/Keyboard\\ Maestro.app/Contents/MacOS/keyboardmaestro RiverKarabiner_CapsAnnounce_Sound"
    }

    ;; :froms {
    ;;     :any_key { :any :key_code }
    ;;     :any_consumer { :any :consumer_key_code }
    ;;     :any_button { :any :pointing_button }

    ;;     ;; alias
    ;;     :delete { :key :delete_or_backspace }
    ;;     :return { :key :return_or_enter }
    ;;     :btick { :key :grave_accent_and_tilde }
    ;;     :tilde { :key :grave_accent_and_tilde }
    ;;     :bslash { :key :backslash }
    ;;     :ls { :key :left_shift }
    ;;     :rs { :key :right_shift }
    ;; }

    :tos {
        :left-desktop { :key :!Tleft_arrow }
        :right-desktop { :key :!Tright_arrow }
        :mission-control { :key :!Tup_arrow }
        :app-windows { :key :!Tdown_arrow }
        ;; :open-brave { :key :!QEf19 }

        :fine-vol-down { :key :!SOvolume_down }
        :fine-vol-up { :key :!SOvolume_up }

        :spotify-normalize-volume { :key :!Cf20 }
        :spotify-volume-down { :key :!Cf19 }
        :spotify-volume-up { :key :!Cf18 }

        ;; in order for OSX to register a caps lock press, it has to be held for a little under 100ms
        ;; :toggle_caps { :key :caps_lock :hold_down_ms 100 }
        :toggle_caps [{ :key :caps_lock :hold_down_ms 150 } { :key :vk_none }] ;; this vk_none hack makes it consistent somehow
    }

    :main [

        ;; ============== RIVERGAMING ==============

        {
            :des "Dota"
            :rules [
                [:profile :RiverGaming]
                [:condi :dota]

                [:##caps_lock :left_control]
                [:##left_command :left_option]

                [:##left_option :fn]
                [:!F1 :!Oo]
                [:!F2 :!Op]
                [:!F3 :!Oopen_bracket]
                [:!F4 :!Oclose_bracket]
                [:!F5 :!Obackslash]

                [:##escape :!Qfn nil { :alone :escape }]
                [:!QFf1 :o]
                [:!QFf2 :p]
                [:!QFf3 :open_bracket]
                [:!QFf4 :close_bracket]
                [:!QFf5 :backslash]
                [:!QF1 :!Oo]
                [:!QF2 :!Op]
                [:!QF3 :!Oopen_bracket]
                [:!QF4 :!Oclose_bracket]
                [:!QF5 :!Obackslash]

                [:fn :m]

                [:!Of1 :j]
                [:!Of2 :k]
                [:!Of3 :l]
                [:!Of4 :semicolon]

                [:!Tspacebar :spacebar] ;; prevent spotlight search
            ]
        }

        {
            :des "Starcraft 2"
            :rules [
                [:profile :RiverGaming]
                [:condi :starcraft]

                [:##caps_lock :!Tleft_option]
                [:##left_command :left_control]
            ]
        }

        {
            :des "Terraria"
            :rules [
                [:profile :RiverGaming]
                [:condi :terraria]

                [:##Cq :vk_none] ;; prevent from quitting
            ]
        }

        ;; ============== APPS ==============
        ;; these rules go first because of F keys

        {
            :des "Krita"
            :rules [
                :krita
                [:f1 :f1] [:f2 :f2] [:f3 :f3] [:f4 :f4] [:f5 :f5] [:f6 :f6]
            ]
        }

        ;; ============== FUNCTION ROW ==============

        {
            :des "Function row"
            :rules [
                [:f1 { :input :canary }]
                [:f2 :!QWf16] ;; [:f2 { :input :russian }] ;; switching to these langs doesn't work consistensly
                [:f3 :!QWf17] ;; [:f3 { :input :japanese }] ;; so we do it the hacky way in keyboard maestro
                [:f4 { :input :abc }]

                [:f5 :display_brightness_decrement]
                [:f6 :display_brightness_increment]

                [:f7 :!QWf12] ;; do not disturb [todo: something better than this?]
                [:f8 :play_or_pause]

                ;; HOW TO NOT DO CAPSLOCK:
                ;; dont do :##Eslash, cant type a question mark
                ;; dont do [:right_option :slash] either, cuz capslock changes slash to question mark
                ;; dont do :!Qf12 bc capslock messes up that too
                ;; dont do :##Fright_shift, nope
                ;; the only thing that works is choosing one key like this
                ;; [:f9 :fast_forward nil { :held :caps_lock }] ;; F9 —> F16 [capslock when held]
                ;; ## is crucial because it allows us to press it during caps to turn it off
                ;; [:##f9 [:toggle_caps [:caps-announce]]] ;; F9 —> Announcement Capslock
                [:##f9 :toggle_caps] ;; F9 —> Capslock

                [:f10 :mute]
                [:f11 :volume_decrement]
                [:f12 :volume_increment]
            ]
        }

        ;; ============== GENERAL ==============

        {
            :des "General"
            :rules [
                ;; --- Main ---

                [:##caps_lock :!WEright_shift [:!extend-hold] { :alone :delete_or_backspace }] ;; Capslock -> Hyper
                [:##left_shift :left_shift nil { :alone :return_or_enter }] ;; Shift is Enter when alone

                [:##fn :!Wright_shift] ;; FN -> Semihyper
                [:##right_option :fn] ;; Right Option -> FN

                [:##escape :!Eright_shift nil { :alone :escape }] ;; Escape is Shift-Option (Meh) when held

                ;; --- Tab is Switch ---

                [:!C#TOStab :!C#TOStab] ;; smoothen Cmd-Tab
                [:!WERtab :!WERtab] ;; smoothen Hyper-Tab
                [:!Ttab :!Ttab] ;; smoothen Ctrl-Tab
                [:!Otab :!Otab] ;; smoothen Opt-Tab
                [:!Stab :!Stab] ;; smoothen Shift-Tab

                [:##tab :!Qright_control nil { :alone :tab }] ;;  Tab is Cmd-Ctrl (Switch) when held

                ;; --- Other ---

                ;; makes Fine Volume Adjustment work
                [:!SOf11 :fine-vol-down]
                [:!SOf12 :fine-vol-up]
            ]
        }

        ;; ============== NUPHY ==============

        {
            :des "Nuphy"
            :rules [
                [:profile :Default :River :RiverGaming]
                [:condi :nuphy]

                ;; --- Main ---

                [:f14 :!CTq] ;; lock screen

                ;; --- Knob ---

                [:f15 :mute] ;; knob press
                [:f16 :volume_decrement] ;; knob counter-clockwise
                [:f17 :volume_increment] ;; knob clockwise

                [:!Sf16 :fine-vol-down]
                [:!Sf17 :fine-vol-up]

                [:!Cf15 :spotify-normalize-volume]
                [:!Cf16 :spotify-volume-down]
                [:!Cf17 :spotify-volume-up]
            ]
        }

        ;; ============== HYPER LAYER ==============

        {
            :des "Hyper layer"
            :rules [
                ;; --- Main ---

                [:!WERa :left-desktop]
                [:!WERs :right-desktop]
                [:!WERd :mission-control]

                [:!WERz :!TSf10] ;; quick note
                ;; [:!WERq :open-brave] ;; needed for no annoying hyper + q sound

                [:!WERf12 [:sigkill-frontmost]]

                ;; --- Numpad ---

                [:!WERright_command :0]
                [:!WERm :1]
                [:!WERcomma :2]
                [:!WERperiod :3]
                [:!WERj :4]
                [:!WERk :5]
                [:!WERl :6]
                [:!WERu :7]
                [:!WERi :8]
                [:!WERo :9]
            ]
        }

        ;; ============== MEH LAYER ==============

        {
            :des "Meh layer (Escape key)"
            :rules [
                ;; --- Window management ---

                [:!ERf1 :!QERfn] ;; move windows
                [:!ERf2 :!WERfn] ;; resize windows
                [:!ERf3 :app-windows]

                [:!ERgrave_accent_and_tilde :!TOdown_arrow] ;; return
                [:!ER1 :!TOup_arrow] ;; maximize
                [:!ER2 :!TO1] ;; center
                [:!ER3 :!TO2] ;; river center

                [:!ERq :!TOleft_arrow] ;; left
                [:!ERw :!TOright_arrow] ;; right
            ]
        }

        ;; ============== SWITCH LAYER ==============

        {
            :des "Switch layer (Tab key)"
            :rules [
                ;; --- Main ---

                ;; default binding shows the emoji picker
                [:!QWspacebar :!QWf13] ;; leader key

                ;; --- Media controls ---

                [:!QW1 :volume_decrement]
                [:!QW2 :volume_increment]
                [:!QW3 :mute]

                [:!QWq :play_or_pause]
                [:!QWw :rewind]
                [:!QWe :fast_forward]

                ;; --- Spotify ---

                [:!QWa :!QWEf13] ;; spotify play/pause
                [:!QWs :!QWEf14] ;; spotify previous song
                [:!QWd :!QWEf15] ;; spotify next song
                [:!QWf :!QWEf16] ;; spotify like
                [:!QWg :!QWEf17] ;; spotify unlike

                [:!QWf1 :spotify-volume-down]
                [:!QWf2 :spotify-volume-up]
                [:!QWf3 :spotify-normalize-volume]
            ]
        }

        ;; ============== OPTION LAYER ==============

        {
            :des "Option layer"
            :rules [
                ;; arrow navigation
                [:!O#Sa :left_arrow]
                [:!O#Sd :right_arrow]
                [:!O#Sw :up_arrow]
                [:!O#Ss :down_arrow]

                [:!O#Sq :!Oleft_arrow] ;; navigate word left
                [:!O#Se :!Oright_arrow] ;; navigate word right

                [:!O#Sf1 :home]
                [:!O#Sf2 :end]

                [:!O#S1 :delete_or_backspace]
                [:!O#S2 :return_or_enter]
                [:!O#S3 :page_up]
                [:!O#S4 :page_down]
            ]
        }

        {
            :des "Canary: Option layer"
            :rules [
                :canary

                [:!Of :!Fh] ;; fullscreen
            ]
        }

        {
            :des "Qwerty: Option layer"
            :rules [
                :!canary

                [:!Of :!Ff] ;; fullscreen
            ]
        }

        ;; ============== EXTEND LAYER ==============

        {
            :des "Extend layer activation"
            :rules [[:##right_command ["extend-hold" 1] nil { :afterup ["extend-hold" 0] }]]
        }

        {
            :des "Extend layer"
            :rules [
                :extend-hold

                [:##j :escape]
                [:caps_lock :escape]

                [:##k :delete_or_backspace] ;; delete character
                [:##l :!Odelete_or_backspace] ;; delete word
                [:##semicolon :!Cdelete_or_backspace] ;; delete line

                [:##i :!Fdelete_or_backspace] ;; forward delete character
                [:##o :!FOdelete_or_backspace] ;; forward delete word
                [:##p :!FCdelete_or_backspace] ;; forward delete line
                ;; [:##e [:!Send :delete_or_backspace]] ;; forward delete line

                [:##delete_or_backspace :!Odelete_or_backspace] ;; delete word
            ]
        }

        ;; {
        ;;     :des "Canary: Extend layer"
        ;;     :rules [
        ;;         [:condi :extend-hold :canary]

        ;;         [:##g :!Fh] ;; fullscreen
        ;;         [:##a :!Csemicolon]
        ;;     ]
        ;; }

        ;; {
        ;;     :des "Qwerty: Extend layer"
        ;;     :rules [
        ;;         [:condi :extend-hold :!canary]

        ;;         [:##g :!Ff] ;; fullscreen
        ;;         [:##a :!Ca]
        ;;     ]
        ;; }

        ;; ============== HYPER + COMMAND LAYER ==============

        ;; {
        ;;     :des "Hyper + Command layer"
        ;;     :rules [
        ;;         [:!CWER1 { :input :canary }]
        ;;     ]
        ;; }

        ;; ============== MEH + COMMAND LAYER ==============

        ;; {
        ;;     :des "Meh + Command layer"
        ;;     :rules [
        ;;         [:!CERa { :input :canary }]
        ;;     ]
        ;; }

        ;; ============== CANARY AND QWERTY ==============

        {
            :des "Canary: bindings"
            :rules [
                :canary

                ;; --- Window management ---

                [:!Cq :!Cb] ;; cmd-Q is itself
                [:!Cw :!Cq] ;; cmd-W is itself
                [:!Ce :!Cm] ;; cmd-E -> cmd-H

                ;; --- Text ---

                [:!C#TOSa :!C#TOSsemicolon] ;; cmd-A
                [:!C#TOSz :!C#TOSy] ;; cmd-Z
                [:!C#TOSx :!C#TOSu] ;; cmd-X
                [:!C#TOSc :!C#TOSa] ;; cmd-C
                [:!C#TOSv :!C#TOSx] ;; cmd-V

                ;; make sure replaced shortcuts are pressable
                [:!C#TOSy :!C#TOSz] ;; cmd-Y -> cmd-J (overshadowed by cmd-Z)
                [:!C#TOSsemicolon :!C#TOSc] ;; cmd-; -> cmd-D (overshadowed by cmd-C)
                [:!C#TOSu :!C#TOSv] ;; cmd-U -> cmd-G (overshadowed by cmd-V)
                [:!C#TOSb :!C#TOSw] ;; cmd-B -> cmd-L (overshadowed by cmd-W)
                [:!C#TOSm :!C#TOSe] ;; cmd-M -> cmd-Y (overshadowed by cmd-E)
            ]
        }

        {
            :des "Qwerty: bindings"
            :rules [
                :!canary

                ;; --- Window management ---

                [:!Ce :!Ch] ;; cmd-E -> cmd-H

                ;; make sure replaced shortcuts are pressable
                [:!Ch :!Ce] ;; cmd-H -> cmd-E
            ]
        }

        ;; ============== Homerow modifiers ==============

        ;; this implementation should be better:
        ;; https://github.com/gabriel-gardner/modtap-karabiner/tree/main  !!! MODTAP !!!

        ;; {
        ;;     :des "Homerow modifiers"
        ;;     :rules [
        ;;         ;; the downside is these keys are now typed on KEY UP not DOWN

        ;;         [:a nil nil { :held :left_control :alone :a :params { :alone 100 :held 200 } }]
        ;;         [:s nil nil { :held :left_option  :alone :s :params { :alone 100 :held 200 } }]
        ;;         [:d nil nil { :held :left_shift   :alone :d :params { :alone 100 :held 200 } }]
        ;;         [:f nil nil { :held :left_command :alone :f :params { :alone 100 :held 200 } }]

        ;;         [:j nil nil { :held :right_command :alone :j :params { :alone 100 :held 200 } }]
        ;;         [:k nil nil { :held :right_shift   :alone :k :params { :alone 100 :held 200 } }]
        ;;         [:l nil nil { :held :right_option  :alone :l :params { :alone 100 :held 200 } }]
        ;;         [:semicolon nil nil { :held :right_control :alone :semicolon :params { :alone 100 :held 200 } }]
        ;;     ]
        ;; }
    ]
}